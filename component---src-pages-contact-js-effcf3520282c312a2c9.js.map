{"version":3,"file":"component---src-pages-contact-js-effcf3520282c312a2c9.js","mappings":"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","sources":["webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormCheckInput.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormCheckLabel.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormCheck.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/ElementChildren.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormFloating.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormGroup.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormLabel.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormRange.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormSelect.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormText.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/Switch.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FloatingLabel.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/Form.js","webpack://sikes-and-carlton/./src/components/contactForm.js","webpack://sikes-and-carlton/./src/pages/contact.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/Button.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/Feedback.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormContext.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormControl.js","webpack://sikes-and-carlton/./node_modules/warning/warning.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","// src/components/ContactForm.js\nimport React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport '../css/contactForm.css';\n\nconst GOOGLE_FORM_ACTION_URL = \"https://docs.google.com/forms/d/e/1FAIpQLSeCGD6u9Hh-WE66PJlCEoBVBmwvKSDJatyZXmYCv8LhUDRFpg/formResponse\";\nconst GOOGLE_FORM_NAME_ID = \"entry.222030724\";\nconst GOOGLE_FORM_EMAIL_ID = \"entry.1989085065\";\nconst GOOGLE_FORM_PHONE_ID = \"entry.286980625\";\nconst GOOGLE_FORM_DETAILS_ID = \"entry.1652381296\";\nconst GOOGLE_FORM_ADDRESS_ID = \"entry.245607667\";\n\nconst ContactForm = () => {\n  return (\n    <Form action={GOOGLE_FORM_ACTION_URL} method=\"POST\" target=\"_blank\">\n      <Form.Group controlId=\"name\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control type=\"text\" name={GOOGLE_FORM_NAME_ID} required />\n      </Form.Group>\n\n      <Form.Group controlId=\"email\">\n        <Form.Label>Email</Form.Label>\n        <Form.Control type=\"email\" name={GOOGLE_FORM_EMAIL_ID} required />\n      </Form.Group>\n\n      <Form.Group controlId=\"phone\">\n        <Form.Label>Phone Number</Form.Label>\n        <Form.Control type=\"tel\" name={GOOGLE_FORM_PHONE_ID} required />\n      </Form.Group>\n\n      <Form.Group controlId=\"details\">\n        <Form.Label>Details</Form.Label>\n        <Form.Control as=\"textarea\" name={GOOGLE_FORM_DETAILS_ID} required />\n      </Form.Group>\n\n      <Form.Group controlId=\"address\">\n        <Form.Label>Physical Address</Form.Label>\n        <Form.Control as=\"textarea\" name={GOOGLE_FORM_ADDRESS_ID} />\n      </Form.Group>\n\n      <Button type=\"submit\">Submit</Button>\n    </Form>\n  );\n}\n\nexport default ContactForm;\n","// src/pages/contact.js\n\nimport React from \"react\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport ContactForm from \"../components/contactForm\"\n\nconst ContactPage = () => (\n  <Layout>\n    <Seo title=\"Contact Us\" />\n    <ContactForm />\n  </Layout>\n)\n\nexport default ContactPage;\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","\"use client\";\n\nimport * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"names":["FormCheckInput","id","bsPrefix","className","type","isValid","isInvalid","as","Component","props","ref","controlId","useContext","FormContext","displayName","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","reverse","disabled","feedbackTooltip","feedback","feedbackType","style","title","label","children","innerFormContext","useMemo","hasLabel","toArray","some","child","hasChildOfType","input","Provider","value","Feedback","tooltip","Object","assign","Input","Label","FormFloating","FormGroup","context","FormLabel","column","visuallyHidden","columnClass","classes","Col","FormRange","FormSelect","size","htmlSize","FormText","muted","Switch","FloatingLabel","propTypes","_ref","validated","Form","Group","Control","FormControl","Floating","Check","Text","Range","Select","ContactForm","React","action","method","target","name","required","Button","ContactPage","Layout","Seo","variant","active","prefix","buttonProps","tagName","href","plaintext","readOnly","warning","module","exports"],"sourceRoot":""}