{"version":3,"file":"component---src-pages-contact-js-783b2fbb09c14b3b9c71.js","mappings":"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","sources":["webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/Feedback.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormContext.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormCheckInput.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormCheckLabel.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormCheck.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/ElementChildren.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormControl.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormFloating.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormGroup.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormLabel.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormRange.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormSelect.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FormText.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/Switch.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/FloatingLabel.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/Form.js","webpack://sikes-and-carlton/./node_modules/react-bootstrap/esm/Button.js","webpack://sikes-and-carlton/./src/components/contactForm.js","webpack://sikes-and-carlton/./src/pages/contact.js","webpack://sikes-and-carlton/./node_modules/warning/warning.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","\"use client\";\n\nimport * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","// src/components/ContactForm.js\nimport React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n// import \"../css/contactForm.css\";\n\nconst GOOGLE_FORM_ACTION_URL =\n  \"https://docs.google.com/forms/d/e/1FAIpQLSdXkPPKWh6uetRc9k87uxgbSUOZqr_-fZyRH_5ZqLIhaGcYXA/formResponse\";\nconst GOOGLE_FORM_NAME_ID = \"entry.461958518\";\nconst GOOGLE_FORM_EMAIL_ID = \"entry.114581294\";\nconst GOOGLE_FORM_PHONE_ID = \"entry.517148974\";\nconst GOOGLE_FORM_DETAILS_ID = \"entry.958979502\";\nconst GOOGLE_FORM_ADDRESS_ID = \"entry.295656525\";\n\nconst ContactForm = () => {\n  const formGroupStyle = {\n    marginBottom: \"15px\",\n  };\n\n  return (\n    <Form action={GOOGLE_FORM_ACTION_URL} method=\"POST\" target=\"_blank\">\n      <Form.Group controlId=\"name\" style={formGroupStyle}>\n        <Form.Label>Name</Form.Label>\n        <Form.Control type=\"text\" name={GOOGLE_FORM_NAME_ID} required />\n      </Form.Group>\n\n      <Form.Group controlId=\"email\" style={formGroupStyle}>\n        <Form.Label>Email</Form.Label>\n        <Form.Control type=\"email\" name={GOOGLE_FORM_EMAIL_ID} required />\n      </Form.Group>\n\n      <Form.Group controlId=\"phone\" style={formGroupStyle}>\n        <Form.Label>Phone Number</Form.Label>\n        <Form.Control type=\"tel\" name={GOOGLE_FORM_PHONE_ID} required />\n      </Form.Group>\n\n      <Form.Group controlId=\"details\" style={formGroupStyle}>\n        <Form.Label>Details</Form.Label>\n        <Form.Control as=\"textarea\" name={GOOGLE_FORM_DETAILS_ID} required />\n      </Form.Group>\n\n      <Form.Group controlId=\"address\" style={formGroupStyle}>\n        <Form.Label>Physical Address</Form.Label>\n        <Form.Control as=\"textarea\" name={GOOGLE_FORM_ADDRESS_ID} />\n      </Form.Group>\n\n      <Button type=\"submit\">Submit</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport ContactForm from \"../components/contactForm\";\n\nconst ContactPage = () => (\n  <Layout>\n    <Seo title=\"Contact\" />\n    <ContactForm />\n  </Layout>\n);\n\nexport const Head = () => <Seo title=\"Contact\" />;\n\nexport default ContactPage;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"names":["propTypes","type","tooltip","as","Feedback","Component","className","props","ref","displayName","FormCheckInput","id","bsPrefix","isValid","isInvalid","controlId","useContext","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","reverse","disabled","feedbackTooltip","feedback","feedbackType","style","title","label","children","innerFormContext","useMemo","hasLabel","toArray","some","child","hasChildOfType","input","Provider","value","Object","assign","Input","Label","FormControl","size","htmlSize","plaintext","readOnly","FormFloating","FormGroup","context","FormLabel","column","visuallyHidden","columnClass","classes","Col","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","_ref","validated","Form","Group","Control","Floating","Check","Text","Range","Select","variant","active","prefix","buttonProps","tagName","href","ContactForm","formGroupStyle","marginBottom","React","action","method","target","name","required","Button","Head","Seo","ContactPage","Layout","warning","module","exports"],"sourceRoot":""}